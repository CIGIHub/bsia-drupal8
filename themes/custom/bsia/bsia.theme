<?php



function bsia_preprocess_field(&$variables, $hook) {
 	
 	if($variables['field_name'] === 'field_event_date'){
 		$variables['start_date'] = $variables['items'][0]['content']['#text'];
 		$variables['end_date'] = $variables['items'][1]['content']['#text'];
 	}	 
}

function bsia_views_pre_render(&$view) {

	// if($view->result[0]->view_name == 'news:block_1'){
	// 	dsm($view->result[0]->view_name);
	// 	$row_count = count($view->result);
	// 	dsm($row_count);
	// 	dsm($view->result);

	// }

	
	//dsm($view->result[0]);
	
  	//dsm($view->result[0]->field_news_date_value_year_month);
    // do something for this block
 
}


function bsia_preprocess_node(&$variables){

	if( $variables['node']->getType() === 'news' || ($variables['node']->getType() === 'news' && $variables['view_mode'] === 'teaser')){
		
		$news_date = strtotime($variables['node']->field_news_date->getValue()[0]['value']);
		$variables['news_date_month'] = format_date($news_date, 'custom', 'M');
		$variables['news_date_day'] = format_date($news_date, 'custom', 'd');
		$variables['news_date_year'] = format_date($news_date, 'custom', 'Y');

	}

	if($variables['node']->getType() === 'research'){
		speakers_or_authors($variables['node']->field_speakers, $variables['node']->field_speakers_unlinked);
	}

/* Preprocess logic for event nodes */

	if($variables['node']->getType() === 'event'){

		global $base_url;
		$absolute_url = $base_url . \Drupal::request()->getRequestUri();
		$title = $variables['node']->title->getValue()[0]['value'];
		$description = 'More Event Information: ' . $absolute_url;

		/* get date fields and reformat for ical */ 
		
		$variables['event_date'] = $variables['node']->field_event_date->getValue()[0]['value'];
		$variables['event_date_2'] = $variables['node']->field_event_date->getValue()[1]['value'];
		
		$start_datetime = strtotime($variables['event_date']);
		$end_datetime = strtotime($variables['event_date_2']);

		$ical_start_date = format_date($start_datetime, ical);

		if(!empty($end_datetime)){
			$variables['endstamp'] = format_date($end_datetime, timestamp);
			$ical_end_date = format_date($end_datetime, ical);
		}
		else{
			$variables['endstamp'] = format_date($start_datetime, timestamp);
			$ical_end_date = format_date($start_datetime, ical);
		}
		
		$variables['current_datetime'] = time();

		/* build address from fields and return to event node template */ 
		$street = $variables['node']->field_address_1->getValue()[0]['value'];
		$city = $variables['node']->field_city->getValue()[0]['value'];
		$province_state = $variables['node']->field_state_province->getValue()[0]['value'];
		$country = $variables['node']->field_country->getValue()[0]['value'];

		$address = '';
		$addressFields = array($street, $city, $province_state, $country);
		foreach ($addressFields as $item){
			if($item != ''){
				if ($item === reset($addressFields)){ 
				$address .= $item;
				}
	        	else{
	        		$address .= ', ' . $item;
	        	}
			}
		}
		$variables['address'] = $address;

		$ical_location = $variables['node']->field_location->getValue()[0]['value'] . $address;

		$variables['google_ical'] = 'https://www.google.com/calendar/render?action=TEMPLATE&text=' . $title . '&dates=' . $ical_start_date . '/' . $ical_end_date . '&details=' . $description . '&location=' . $ical_location . '&trp=false&sprop=www.balsillieschool.ca&sprop=name:www.balsillieschool.ca&pli=1&sf=true&output=xml';

		$variables['event_registration_email'] = $variables['node']->field_event_management->getValue()[0]['value'] . '?subject=' . $variables['node']->field_email_subject->getValue()[0]['value'];

		$variables['invitation_only'] = $variables['node']->field_invitation->getValue()[0]['value'];
		$variables['rsvp'] = $variables['node']->field_rsvp->getValue()[0]['value'];

		speakers_or_authors($variables['node']->field_speakers, $variables['node']->field_speakers_unlinked);

	}

/* Preprocess logic for publication ane external publication nodes */

	if($variables['node']->getType() === 'publication' || $variables['node']->getType() === 'external_publication'){

		$publication_type_id = $variables['node']->publication_type->getValue()[0]['target_id'];
		$publication_type_object = taxonomy_term_load($publication_type_id);
		$publication_type_uri = taxonomy_term_uri($publication_type_object);

		$publication_type_name = $publication_type_object->get('name')->value;
		
		$variables['publication_source'] = $variables['node']->field_publication_source->getValue()[0]['value'];
		$variables['publication_type_name'] = $publication_type_name;
		$variables['publication_type_uri'] = $publication_type_uri;

		$variables['publication_source_link'] = $variables['node']->field_publication_source_link->getValue()[0]['value'];

		speakers_or_authors($variables['node']->field_speakers, $variables['node']->field_speakers_unlinked);

	}

/* Preprocess logic for publication nodes */

	if($variables['node']->getType() === 'publication'){

		if(!empty($variables['node']->field_link_label->getValue()[0]['value'])){
			$variables['link_label'] = $variables['node']->field_link_label->getValue()[0]['value'];
		}
		else{
			$variables['link_label'] = 'Visit Website';
		}
	}

 }	

function speakers_or_authors($node_speakers_linked, $node_speakers_unlinked){

	/* assemble speakers string */
	$speaker_list = array();

	//create a string from linked speakers
	foreach($node_speakers_linked->getValue() as $key=>$value){
		$speaker_object = entity_load('node', $node_speakers_linked->getValue()[$key]['target_id']);
		$speaker_path = \Drupal::service('path.alias_manager')->getAliasByPath('/node/'.$speaker_object->id(), 'en');
		$speaker = '<a href="' . $speaker_path . '">' . $speaker_object->label() . '</a>';
		array_push($speaker_list, $speaker);
	}
	foreach($node_speakers_unlinked->getValue() as $key=>$value){
		array_push($speaker_list, $node_speakers_unlinked->getValue()[$key]['value']);
	}

	$variables['speaker_string'] = implode(', ', $speaker_list);

	return $speaker_list;
	
}


function bsia_page_attachments_alter(array &$page){
	//'Content-type: text/calendar; charset=utf-8'
	// $viewport = array(
 //      '#type' => 'html_tag',
 //      '#tag' => 'meta',
 //      '#attributes' => array(
 //        'name' => 'viewport',
 //        'content' => 'width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no',
 //      ),
 //    );
 //    $page['#attached']['html_head'][] = [$viewport, 'viewport'];
    //print_r($page['#attached']['html_head']);
}

?>