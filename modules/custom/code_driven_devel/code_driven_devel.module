<?php

/**
 * @file
 * Code-driven development's functions
 */
use Drupal\Core\Extension\InfoParser;

/**
 * Updates dependencies based on the info file.
 *
 * If during the course of development, you add a dependency to your
 * module's .info file, increment the update hook
 * (see the .install module) and this function will be called, making
 * sure dependencies are enabled.
 */
function code_driven_devel_update_dependencies() {
  $parser = new InfoParser;
  $info_file = $parser->parse(drupal_get_path('module', 'code_driven_devel') . '/code_driven_devel.info.yml');
  if (isset($info_file['dependencies'])) {
    \Drupal::service('module_installer')->install($info_file['dependencies'], TRUE);
  }
}

/**
 * Set the UUID of this website.
 *
 * By default, reinstalling a site will assign it a new random UUID, making
 * it impossible to sync configuration with other instances. This function
 * is called by site deployment module's .install hook.
 *
 * @param $uuid
 *   A uuid string, for example 'e732b460-add4-47a7-8c00-e4dedbb42900'.
 */
function code_driven_devel_set_uuid($uuid) {
  \Drupal::configFactory() ->getEditable('system.site') // After Jan. 16th, 2015, see [Nathanael's comment](http://dcycleproject.org/comment/2603#comment-2603)
  // \Drupal::config('system.site') // Before Jan. 16th, 2015
    ->set('uuid', $uuid)
    ->save();
}

function code_driven_devel_override_uuids() {

  // we need to parse all uuids from deploy dir and override local uuids
  $dir = \Drupal::root() . '/' . config_get_config_directory('deploy') . '/';
  $files = scandir($dir);

  foreach($files as $file) {
    $info = Yaml::parse($dir . $file);
    $name = substr($file, 0, -4);
    if(is_array($info) && array_key_exists('uuid', $info)) {
      if(in_array($name, \Drupal::configFactory()->listAll())) {
        \Drupal::configFactory()
          ->getEditable($name)
          ->set('uuid', $info['uuid'])
          ->save();
      }
    }
  }
}
